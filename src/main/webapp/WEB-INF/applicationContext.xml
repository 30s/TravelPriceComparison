<?xml version="1.0" encoding="UTF-8"?>  
    <!--suppress SpringFacetInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:hdp="http://www.springframework.org/schema/hadoop"
       xmlns:p="http://www.springframework.org/schema/p"
   xsi:schemaLocation="  
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">


    <bean id="phoenixDataSource" class="org.apache.commons.dbcp.BasicDataSource">
       <property name="driverClassName" value="org.apache.phoenix.jdbc.PhoenixDriver"/>
       <property name="url" value="jdbc:phoenix:master"/>
       <property name="initialSize" value="15"/>
       <property name="maxActive" value="0"/>   
   </bean>
   
   <bean id="phoenixJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
       <constructor-arg ref="phoenixDataSource"/>
       <qualifier value="phoenixJdbcTemplate"/> 
   </bean>


    <hdp:configuration id="hadoopConfiguration">
        fs.defaultFS=hdfs://master:9000
        hadoop.tmp.dir=/home/hadoop/hadoop-2.6.0/tmp
        dfs.namenode.name.dir=/home/hadoop/hadoop-2.6.0/dfs/name
        dfs.datanode.data.dir=/home/hadoop/hadoop-2.6.0/dfs/data
        dfs.replication = 2
        mapreduce.framework.name=yarn
        mapreduce.task.timeout=30000000
        yarn.nodemanager.aux-services=mapreduce_shuffle
        yarn.nodemanager.aux-services.mapreduce.shuffle.class=org.apache.hadoop.mapred.ShuffleHandler

        yarn.resourcemanager.address=master:8032
        yarn.resourcemanager.scheduler.address=master:8030
        yarn.resourcemanager.resource-tracker.address=master:8031
        yarn.resourcemanager.webapp.address=master:50030
    </hdp:configuration>


    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher" p:jobRepository-ref="jobRepository"/>

    <!--Creating a Hadoop Job-->
    <hdp:job id="downURLSpiderJob"
             mapper="com.mobin.downURL.DownURLMapper"/>
    <!--
             number-reducers="0"/>
             -->

    <hdp:job id="extractionDataSpiderJob"
             mapper="com.mobin.extractionData.ExtractionDataMap"
             reducer="com.mobin.extractionData.ExtractionDataReduce"/>

    <hdp:job id="cartesianMRJob"
             mapper="com.mobin.CartesianMapReduce.CartestianMap"
             reducer="com.mobin.CartesianMapReduce.CartesianReduce"/>

    <hdp:job id="cleanDataJob"
             mapper="com.mobin.cleanData.TravelDataCleanMapper"
             reducer="com.mobin.cleanData.TravelDataCleanReducer"/>

    <hdp:job id="convertDataJob"
             mapper="com.mobin.convert.ConvertMapper"/>

    <hdp:job id="putDataToHBaseJob"
             mapper="com.mobin.putDataToHBase.PutDataToHBaseDefault" configuration-ref="hadoopConfiguration"/>

    <hdp:job id="tuniuURLJob"
             mapper="com.mobin.downURL.DownURLTuniuMapper"/>

    <hdp:job id="geneateHFileJob" map-key="org.apache.hadoop.hbase.io.ImmutableBytesWritable"
             map-value="org.apache.hadoop.hbase.client.Put"
             output-format="org.apache.hadoop.hbase.mapreduce.HFileOutputFormat2"
             mapper="com.mobin.putDataToHBase.GenerateHFile" number-reducers="0"/>

    <!--Running a Hadoop Job-->
    <hdp:job-runner id="downURLjobRunner"
                    job-ref="downURLSpiderJob" run-at-startup="false"/>

    <hdp:job-runner id="extractionDatajobRunner"
                    job-ref="extractionDataSpiderJob" run-at-startup="false"/>

    <hdp:job-runner id="cartesianjobRunner"
                    job-ref="cartesianMRJob" run-at-startup="false"/>

    <hdp:job-runner id="cleanDataJobRunner"
                    job-ref="cleanDataJob" run-at-startup="false"/>

    <hdp:job-runner id="convertDataJobRunner"
                    job-ref="convertDataJob" run-at-startup="false"/>

    <hdp:job-runner id="putDataToHBaseJobRunner"
                    job-ref="putDataToHBaseJob" run-at-startup="false"/>

    <hdp:job-runner id="tuniuURLJobRrunner"
                    job-ref="tuniuURLJob"  run-at-startup="false"/>

    <hdp:job-runner id="generateHFilejobRunner"
                    job-ref="geneateHFileJob"  run-at-startup="false"/>


    <hdp:hbase-configuration configuration-ref="hadoopConfiguration" id="hbaseConfiguration"/>
    <!-- 配置HbaseTemplate -->  
    <bean id="htemplate" class="org.springframework.data.hadoop.hbase.HbaseTemplate">  
        <property name="configuration" ref="hbaseConfiguration"/>  
    </bean>

    <bean id="travelDao" class="com.mobin.dao.impl.TravelDaoImpl">
        <property name="jdbcTemplate" ref="phoenixJdbcTemplate"/>
    </bean>

    <bean id="travelService" class="com.mobin.serviceDao.impl.TravelServiceDaoImpl">
        <property name="travelDao" ref="travelDao"/>
    </bean>

    <bean id="travelAction" class="com.mobin.action.TravelAction">
        <property name="travelServicedao" ref="travelService"/>
    </bean>

    <bean id="loginAction" class="com.mobin.action.LoginAction">
        <property name="service" ref="travelService"/>
    </bean>

    <bean id="spiderAction" class="com.mobin.action.SpiderAction">
        <property name="htemplate" ref="htemplate"/>
    </bean>

    <bean id="adminAction" class="com.mobin.action.AdminAction" scope="prototype">
        <property name="hadoopConfiguration" ref="hadoopConfiguration"/>
        <property name="service" ref="travelService"/>
        <property name="spider" ref="spiderAction"/>
    </bean>

    <bean id="createtable" class="com.mobin.util.CreateTable">
        <property name="jdbcTemplate" ref="phoenixJdbcTemplate"/>
        <property name="dataSource" ref="phoenixDataSource"/>
    </bean>

    <bean id="quartzSpiderAction" class="com.mobin.action.QuartzAction"/>

    <bean id="hbaseDao" class="com.mobin.dao.impl.HBaseDaoImpl">
        <property name="htemplate" ref="htemplate"/>
    </bean>



    



 </beans> 